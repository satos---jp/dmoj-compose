diff --git a/.gitignore b/.gitignore
index a755bd0f..b073f92f 100644
--- a/.gitignore
+++ b/.gitignore
@@ -6,7 +6,6 @@
 *.mo
 *~
 *.swp
-dmoj/local_settings.py
 resources/dark
 resources/martor-description.css
 resources/select2-dmoj.css
diff --git a/dmoj/local_settings.py b/dmoj/local_settings.py
new file mode 100644
index 00000000..a4d532b1
--- /dev/null
+++ b/dmoj/local_settings.py
@@ -0,0 +1,331 @@
+#####################################
+########## Django settings ##########
+#####################################
+import os
+
+# See <https://docs.djangoproject.com/en/1.11/ref/settings/>
+# for more info and help. If you are stuck, you can try Googling about
+# Django - many of these settings below have external documentation about them.
+#
+# The settings listed here are of special interest in configuring the site.
+
+# SECURITY WARNING: keep the secret key used in production secret!
+# You may use this command to generate a key:
+# python3 -c 'from django.core.management.utils import get_random_secret_key;print(get_random_secret_key())'
+SECRET_KEY = 'This key is not very secure and you should change it.'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = os.getenv("DEBUG", True) in ("true", "1")  # Change to False once you are done with runserver testing.
+
+# Uncomment and set to the domain names this site is intended to serve.
+# You must do this once you set DEBUG to False.
+ALLOWED_HOSTS = ['*']
+
+# Optional apps that DMOJ can make use of.
+INSTALLED_APPS += (
+)
+
+# Caching. You can use memcached or redis instead.
+# Documentation: <https://docs.djangoproject.com/en/1.11/topics/cache/>
+CACHES = {
+    "default": {
+        "BACKEND": "django.core.cache.backends.memcached.PyMemcacheCache",
+        "LOCATION": "127.0.0.1:11211",
+    }
+}
+
+# Your database credentials. Only MySQL is supported by DMOJ.
+# Documentation: <https://docs.djangoproject.com/en/1.11/ref/databases/>
+DATABASES = {
+     'default': {
+        'ENGINE': 'django.db.backends.mysql',
+        'NAME': os.getenv("DB_DATABASE", "dmoj"),
+        'USER': os.getenv("DB_USER", "dmoj"),
+        'PASSWORD': os.getenv("DB_PASSWORD", "password"),
+        'HOST': os.getenv("DB_HOST", "localhost"),
+        'OPTIONS': {
+            'charset': 'utf8mb4',
+            'sql_mode': 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION',
+        },
+    }
+}
+
+# Sessions.
+# Documentation: <https://docs.djangoproject.com/en/1.11/topics/http/sessions/>
+#SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
+
+# Internationalization.
+# Documentation: <https://docs.djangoproject.com/en/1.11/topics/i18n/>
+LANGUAGE_CODE = 'ja'
+DEFAULT_USER_TIME_ZONE = 'Asia/Tokyo'
+USE_I18N = True
+USE_L10N = True
+USE_TZ = True
+
+## django-compressor settings, for speeding up page load times by minifying CSS and JavaScript files.
+# Documentation: https://django-compressor.readthedocs.io/en/latest/
+COMPRESS_OUTPUT_DIR = 'cache'
+COMPRESS_CSS_FILTERS = [
+    'compressor.filters.css_default.CssAbsoluteFilter',
+    'compressor.filters.cssmin.CSSMinFilter',
+]
+COMPRESS_JS_FILTERS = ['compressor.filters.jsmin.JSMinFilter']
+COMPRESS_STORAGE = 'compressor.storage.GzipCompressorFileStorage'
+STATICFILES_FINDERS += ('compressor.finders.CompressorFinder',)
+
+
+#########################################
+########## Email configuration ##########
+#########################################
+# See <https://docs.djangoproject.com/en/1.11/topics/email/#email-backends>
+# for more documentation. You should follow the information there to define
+# your email settings.
+
+# Use this if you are just testing.
+EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
+REGISTRATION_AUTO_LOGIN = True
+
+# The following block is included for your convenience, if you want
+# to use Gmail.
+#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
+#EMAIL_USE_TLS = True
+#EMAIL_HOST = 'smtp.gmail.com'
+#EMAIL_HOST_USER = '<your account>@gmail.com'
+#EMAIL_HOST_PASSWORD = '<your password>'
+#EMAIL_PORT = 587
+
+# To use Mailgun, uncomment this block.
+# You will need to run `pip install django-mailgun` for to get `MailgunBackend`.
+#EMAIL_BACKEND = 'django_mailgun.MailgunBackend'
+#MAILGUN_ACCESS_KEY = '<your Mailgun access key>'
+#MAILGUN_SERVER_NAME = '<your Mailgun domain>'
+
+# You can also use Sendgrid, with `pip install sendgrid-django`.
+#EMAIL_BACKEND = 'sgbackend.SendGridBackend'
+#SENDGRID_API_KEY = '<Your SendGrid API Key>'
+
+# The DMOJ site is able to notify administrators of errors via email,
+# if configured as shown below.
+
+# A tuple of (name, email) pairs that specifies those who will be mailed
+# when the server experiences an error when DEBUG = False.
+ADMINS = (
+    ('Your Name', 'your.email@example.com'),
+)
+
+# The sender for the aforementioned emails.
+SERVER_EMAIL = 'ThisIsInvalidSender@example.com'
+
+
+##################################################
+########### Static files configuration. ##########
+##################################################
+# See <https://docs.djangoproject.com/en/1.11/howto/static-files/>.
+
+# Change this to somewhere more permanent., especially if you are using a
+# webserver to serve the static files. This is the directory where all the
+# static files DMOJ uses will be collected to.
+# You must configure your webserver to serve this directory as /static/ in production.
+STATIC_ROOT = '/var/www/static'
+
+# URL to access static files.
+STATIC_URL = '/static/'
+
+# Uncomment to use hashed filenames with the cache framework.
+#STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.CachedStaticFilesStorage'
+
+############################################
+########## DMOJ-specific settings ##########
+############################################
+
+## DMOJ site display settings.
+SITE_NAME = 'DMOJ'
+SITE_LONG_NAME = 'DMOJ: Modern Online Judge'
+SITE_ADMIN_EMAIL = 'admin@example.com'
+TERMS_OF_SERVICE_URL = '' # Use a flatpage.
+
+## Bridge controls.
+# The judge connection address and port; where the judges will connect to the site.
+# You should change this to something your judges can actually connect to
+# (e.g., a port that is unused and unblocked by a firewall).
+BRIDGED_JUDGE_ADDRESS = [('0.0.0.0', 9999)]
+
+# The bridged daemon bind address and port to communicate with the site.
+#BRIDGED_DJANGO_ADDRESS = [('localhost', 9998)]
+
+## DMOJ features.
+# Set to True to enable full-text searching for problems.
+ENABLE_FTS = True
+
+# Set of email providers to ban when a user registers, e.g., {'throwawaymail.com'}.
+BAD_MAIL_PROVIDERS = set()
+
+# The number of submissions that a staff user can rejudge at once without
+# requiring the permission 'Rejudge a lot of submissions'.
+# Uncomment to change the submission limit.
+#DMOJ_SUBMISSIONS_REJUDGE_LIMIT = 10
+
+## Event server.
+# Uncomment to enable live updating.
+EVENT_DAEMON_USE = True
+
+# Uncomment this section to use websocket/daemon.js included in the site.
+# EVENT_DAEMON_POST = '<ws:// URL to post to>'
+
+# If you are using the defaults from the guide, it is this:
+EVENT_DAEMON_POST = 'ws://127.0.0.1:15101/'
+
+# These are the publicly accessed interface configurations.
+# They should match those used by the script.
+#EVENT_DAEMON_GET = '<public ws:// URL for clients>'
+#EVENT_DAEMON_GET_SSL = '<public wss:// URL for clients>'
+#EVENT_DAEMON_POLL = '<public URL to access the HTTP long polling of event server>'
+# i.e. the path to /channels/ exposed by the daemon, through whatever proxy setup you have.
+
+# Using our standard nginx configuration, these should be.
+EVENT_DAEMON_GET = 'ws://127.0.0.1/event/'
+#EVENT_DAEMON_GET_SSL = 'wss://<your domain>/event/' # Optional
+EVENT_DAEMON_POLL = '/channels/'
+
+# If you would like to use the AMQP-based event server from <https://github.com/DMOJ/event-server>,
+# uncomment this section instead. This is more involved, and recommended to be done
+# only after you have a working event server.
+#EVENT_DAEMON_AMQP = '<amqp:// URL to connect to, including username and password>'
+#EVENT_DAEMON_AMQP_EXCHANGE = '<AMQP exchange to use>'
+
+## Celery
+CELERY_BROKER_URL = 'redis://redis:6379'
+CELERY_RESULT_BACKEND = 'redis://redis:6379'
+
+## CDN control.
+# Base URL for a copy of ace editor.
+# Should contain ace.js, along with mode-*.js.
+ACE_URL = '//cdnjs.cloudflare.com/ajax/libs/ace/1.2.3/'
+JQUERY_JS = '//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js'
+SELECT2_JS_URL = '//cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js'
+SELECT2_CSS_URL = '//cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css'
+
+# A map of Earth in Equirectangular projection, for timezone selection.
+# Please try not to hotlink this poor site.
+TIMEZONE_MAP = 'http://naturalearth.springercarto.com/ne3_data/8192/textures/3_no_ice_clouds_8k.jpg'
+
+## Camo (https://github.com/atmos/camo) usage.
+#DMOJ_CAMO_URL = "<URL to your camo install>"
+#DMOJ_CAMO_KEY = "<The CAMO_KEY environmental variable you used>"
+
+# Domains to exclude from being camo'd.
+#DMOJ_CAMO_EXCLUDE = ("https://dmoj.ml", "https://dmoj.ca")
+
+# Set to True to use https when dealing with protocol-relative URLs.
+# See <http://www.paulirish.com/2010/the-protocol-relative-url/> for what they are.
+#DMOJ_CAMO_HTTPS = False
+
+# HTTPS level. Affects <link rel='canonical'> elements generated.
+# Set to 0 to make http URLs canonical.
+# Set to 1 to make the currently used protocol canonical.
+# Set to 2 to make https URLs canonical.
+#DMOJ_HTTPS = 0
+
+## PDF rendering settings.
+# Directory to cache the PDF.
+#DMOJ_PDF_PROBLEM_CACHE = '/home/dmoj-uwsgi/pdfcache'
+
+# Path to use for nginx's X-Accel-Redirect feature.
+# Should be an internal location mapped to the above directory.
+#DMOJ_PDF_PROBLEM_INTERNAL = '/pdfcache'
+
+# Enable Selenium PDF generation
+#USE_SELENIUM = True
+
+## Data download settings.
+# Uncomment to allow users to download their data
+DMOJ_USER_DATA_DOWNLOAD = True
+
+# Directory to cache user data downloads.
+# It is the administrator's responsibility to clean up old files.
+#DMOJ_USER_DATA_CACHE = '/home/dmoj-uwsgi/datacache'
+
+# Path to use for nginx's X-Accel-Redirect feature.
+# Should be an internal location mapped to the above directory.
+#DMOJ_USER_DATA_INTERNAL = '/datacache'
+# How often a user can download their data.
+#DMOJ_USER_DATA_DOWNLOAD_RATELIMIT = datetime.timedelta(days=1)
+
+
+## ======== Logging Settings ========
+# Documentation: https://docs.djangoproject.com/en/1.9/ref/settings/#logging
+#                https://docs.python.org/2/library/logging.config.html#logging-config-dictschema
+LOGGING = {
+    'version': 1,
+    'disable_existing_loggers': False,
+    'formatters': {
+        'file': {
+            'format': '%(levelname)s %(asctime)s %(module)s %(message)s',
+        },
+        'simple': {
+            'format': '%(levelname)s %(message)s',
+        },
+    },
+    'handlers': {
+        # You may use this handler as example for logging to other files..
+        'bridge': {
+            'level': 'INFO',
+            'class': 'logging.handlers.RotatingFileHandler',
+            'filename': '<desired bridge log path>',
+            'maxBytes': 10 * 1024 * 1024,
+            'backupCount': 10,
+            'formatter': 'file',
+        },
+        'mail_admins': {
+            'level': 'ERROR',
+            'class': 'dmoj.throttle_mail.ThrottledEmailHandler',
+        },
+        'console': {
+            'level': 'DEBUG',
+            'class': 'logging.StreamHandler',
+            'formatter': 'file',
+        },
+    },
+    'loggers': {
+        # Site 500 error mails.
+        'django.request': {
+            'handlers': ['mail_admins'],
+            'level': 'ERROR',
+            'propagate': False,
+        },
+        # Judging logs as received by bridged.
+        'judge.bridge': {
+            'handlers': ['bridge', 'mail_admins'],
+            'level': 'INFO',
+            'propagate': True,
+        },
+        # Catch all log to stderr.
+        '': {
+            'handlers': ['console'],
+        },
+        # Other loggers of interest. Configure at will.
+        #  - judge.user: logs naughty user behaviours.
+        #  - judge.problem.pdf: PDF generation log.
+        #  - judge.html: HTML parsing errors when processing problem statements etc.
+        #  - judge.mail.activate: logs for the reply to activate feature.
+        #  - event_socket_server
+    },
+}
+
+## ======== Integration Settings ========
+## Python Social Auth
+# Documentation: https://python-social-auth.readthedocs.io/en/latest/
+# You can define these to enable authentication through the following services.
+#SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
+#SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''
+#SOCIAL_AUTH_FACEBOOK_KEY = ''
+#SOCIAL_AUTH_FACEBOOK_SECRET = ''
+#SOCIAL_AUTH_GITHUB_SECURE_KEY = ''
+#SOCIAL_AUTH_GITHUB_SECURE_SECRET = ''
+#SOCIAL_AUTH_DROPBOX_OAUTH2_KEY = ''
+#SOCIAL_AUTH_DROPBOX_OAUTH2_SECRET = ''
+
+## ======== Custom Configuration ========
+# You may add whatever django configuration you would like here.
+# Do try to keep it separate so you can quickly patch in new settings.
+DMOJ_PROBLEM_DATA_ROOT = "/home/ubuntu/problems"
diff --git a/dmoj/settings.py b/dmoj/settings.py
index a08bbd8d..4ec1ca7c 100644
--- a/dmoj/settings.py
+++ b/dmoj/settings.py
@@ -44,9 +44,9 @@ DMOJ_2FA_HARDCORE = False
 DMOJ_SSL = 0
 
 # Refer to https://dmoj.ca/post/103-point-system-rework
-DMOJ_PP_STEP = 0.95
-DMOJ_PP_ENTRIES = 100
-DMOJ_PP_BONUS_FUNCTION = lambda n: 300 * (1 - 0.997 ** n)  # noqa: E731
+DMOJ_PP_STEP = 1.0
+DMOJ_PP_ENTRIES = 1000
+DMOJ_PP_BONUS_FUNCTION = lambda n: 0
 
 ACE_URL = '//cdnjs.cloudflare.com/ajax/libs/ace/1.1.3'
 SELECT2_JS_URL = '//cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js'
@@ -305,20 +305,7 @@ IMPERSONATE_DISABLE_LOGGING = True
 
 ACCOUNT_ACTIVATION_DAYS = 7
 
-AUTH_PASSWORD_VALIDATORS = [
-    {
-        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
-    },
-    {
-        'NAME': 'judge.utils.pwned.PwnedPasswordsValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
-    },
-]
+AUTH_PASSWORD_VALIDATORS = []
 
 SILENCED_SYSTEM_CHECKS = ['urls.W002', 'fields.W342']
 
diff --git a/dmoj/urls.py b/dmoj/urls.py
index f2d117da..bc25d036 100644
--- a/dmoj/urls.py
+++ b/dmoj/urls.py
@@ -25,6 +25,11 @@ from judge.views.widgets import martor_image_uploader
 
 admin.autodiscover()
 
+def exception(request):
+    if not request.user.is_superuser:
+        raise Http404()
+    raise RuntimeError('@Xyene asked me to cause this')
+
 register_patterns = [
     path('activate/complete/',
          TitledTemplateView.as_view(template_name='registration/activation_complete.html',
@@ -44,11 +49,11 @@ register_patterns = [
          name='registration_disallowed'),
     path('login/', user.CustomLoginView.as_view(), name='auth_login'),
     path('logout/', user.UserLogoutView.as_view(), name='auth_logout'),
-    path('password/change/', user.CustomPasswordChangeView.as_view(), name='password_change'),
+    path('password/change/', exception, name='password_change'),
     path('password/change/done/', auth_views.PasswordChangeDoneView.as_view(
         template_name='registration/password_change_done.html',
     ), name='password_change_done'),
-    path('password/reset/', user.CustomPasswordResetView.as_view(), name='password_reset'),
+    path('password/reset/', exception, name='password_reset'),
     re_path(r'^password/reset/confirm/(?P<uidb64>[0-9A-Za-z]+)-(?P<token>.+)/$',
             auth_views.PasswordResetConfirmView.as_view(
                 template_name='registration/password_reset_confirm.html',
@@ -60,7 +65,7 @@ register_patterns = [
         template_name='registration/password_reset_done.html',
     ), name='password_reset_done'),
     path('social/error/', register.social_auth_error, name='social_auth_error'),
-    path('email/change/', user.EmailChangeRequestView.as_view(), name='email_change'),
+    path('email/change/', exception, name='email_change'),
     path('email/change/activate/<str:activation_key>/',
          user.EmailChangeActivateView.as_view(), name='email_change_activate'),
 
@@ -78,18 +83,16 @@ register_patterns = [
 ]
 
 
-def exception(request):
-    if not request.user.is_superuser:
-        raise Http404()
-    raise RuntimeError('@Xyene asked me to cause this')
-
-
 def paged_list_view(view, name):
     return include([
         path('', view.as_view(), name=name),
         path('<int:page>', view.as_view(), name=name),
     ])
 
+def exception_problem(request,problem):
+    if not request.user.is_superuser:
+        raise Http404()
+    raise RuntimeError('@Xyene asked me to cause this')
 
 urlpatterns = [
     path('', blog.PostList.as_view(template_name='home.html', title=_('Home')), kwargs={'page': 1}, name='home'),
@@ -123,7 +126,7 @@ urlpatterns = [
         path('/data/<path:path>', problem_data_file, name='problem_data_file'),
 
         path('/tickets', ticket.ProblemTicketListView.as_view(), name='problem_ticket_list'),
-        path('/tickets/new', ticket.NewProblemTicketView.as_view(), name='new_problem_ticket'),
+        path('/tickets/new', exception_problem, name='new_problem_ticket'),
 
         path('/vote', problem.ProblemVote.as_view(), name='problem_vote'),
         path('/vote/delete', problem.DeleteProblemVote.as_view(), name='delete_problem_vote'),
diff --git a/gen_diff.sh b/gen_diff.sh
new file mode 100755
index 00000000..741751cd
--- /dev/null
+++ b/gen_diff.sh
@@ -0,0 +1,6 @@
+set -eux
+
+# git diff master > ../dmoj-private/dmoj_docker/docker/site/repodiff.diff
+
+git diff master > ../satos-judger-yml/compose/site/repodiff.diff
+
diff --git a/judge/comments.py b/judge/comments.py
index 21481394..fbc3343a 100644
--- a/judge/comments.py
+++ b/judge/comments.py
@@ -42,14 +42,9 @@ class CommentForm(ModelForm):
 
     def clean(self):
         if self.request is not None and self.request.user.is_authenticated:
-            profile = self.request.profile
-            if profile.mute:
-                raise ValidationError(_('Your part is silent, little toad.'))
-            elif not self.request.user.is_staff and not profile.has_any_solves:
-                raise ValidationError(_('You must solve at least one problem before your voice can be heard.'))
+            raise ValidationError(_('Comment is disabled.'))
         return super(CommentForm, self).clean()
 
-
 class CommentedDetailView(TemplateResponseMixin, SingleObjectMixin, View):
     comment_page = None
 
diff --git a/judge/fixtures/demo.json b/judge/fixtures/demo.json
index 306d8b5e..0d4f101c 100644
--- a/judge/fixtures/demo.json
+++ b/judge/fixtures/demo.json
@@ -1,172 +1,2 @@
 [
-    {
-        "fields": {
-            "about": "",
-            "ace_theme": "github",
-            "current_contest": null,
-            "display_rank": "admin",
-            "ip": "10.0.2.2",
-            "language": 1,
-            "last_access": "2017-12-02T08:57:10.093Z",
-            "math_engine": "auto",
-            "mute": false,
-            "organizations": [
-                1
-            ],
-            "performance_points": 0.0,
-            "points": 0.0,
-            "problem_count": 0,
-            "rating": null,
-            "timezone": "America/Toronto",
-            "user": 1,
-            "user_script": ""
-        },
-        "model": "judge.profile",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "date_joined": "2017-12-02T08:34:17.408Z",
-            "email": "",
-            "first_name": "",
-            "groups": [
-
-            ],
-            "is_active": true,
-            "is_staff": true,
-            "is_superuser": true,
-            "last_login": "2017-12-02T08:34:31.840Z",
-            "last_name": "",
-            "password": "pbkdf2_sha256$36000$eFRRZq4DgktS$md1gk0bBJb7PH/+3YEXkcCW8K+KmiI+y/amqR32G2DY=",
-            "user_permissions": [
-
-            ],
-            "username": "admin"
-        },
-        "model": "auth.user",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "about": "This is a sample organization. You can use organizations to split up your user base, host private contests, and more.",
-            "access_code": null,
-            "admins": [
-                1
-            ],
-            "creation_date": "2017-12-02T08:50:25.199Z",
-            "is_open": true,
-            "slug": "dmoj",
-            "name": "DMOJ: Modern Online Judge",
-            "short_name": "DMOJ",
-            "slots": null
-        },
-        "model": "judge.organization",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "full_name": "Simple Math",
-            "name": "Simple Math"
-        },
-        "model": "judge.problemtype",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "full_name": "Uncategorized",
-            "name": "Uncategorized"
-        },
-        "model": "judge.problemgroup",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "ac_rate": 0.0,
-            "allowed_languages": [
-                3,
-                4,
-                5,
-                6,
-                2,
-                7,
-                1,
-                8
-            ],
-            "authors": [
-                1
-            ],
-            "banned_users": [
-
-            ],
-            "code": "aplusb",
-            "curators": [
-
-            ],
-            "date": "2017-12-02T05:00:00Z",
-            "description": "Tudor is sitting in math class, on his laptop. Clearly, he is not paying attention in this situation. However, he gets called on by his math teacher to do some problems. Since his math teacher did not expect much from Tudor, he only needs to do some simple addition problems. However, simple for you and I may not be simple for Tudor, so please help him!\n\n## Input Specification\n\nThe first line will contain an integer ~N~ (~1 \\le N \\le 100\\,000~), the number of addition problems Tudor needs to do. The next ~N~ lines will each contain two space-separated integers whose absolute value is less than ~1\\,000\\,000\\,000~, the two integers Tudor needs to add.\n\n## Output Specification\n\nOutput ~N~ lines of one integer each, the solutions to the addition problems in order.\n\n## Sample Input\n\n    2\n    1 1\n    -1 0\n\n## Sample Output\n\n    2\n    -1",
-            "group": 1,
-            "is_manually_managed": false,
-            "is_public": true,
-            "license": null,
-            "memory_limit": 65536,
-            "name": "A Plus B",
-            "og_image": "",
-            "partial": true,
-            "points": 5.0,
-            "short_circuit": false,
-            "summary": "",
-            "testers": [
-
-            ],
-            "time_limit": 2.0,
-            "types": [
-                1
-            ],
-            "user_count": 0
-        },
-        "model": "judge.problem",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "authors": [
-                1
-            ],
-            "content": "Welcome to the DMOJ!\n\n```python\nprint('Hello, World!')\n```\n\nYou can get started by checking out [this problem we've added for you](/problem/aplusb).",
-            "og_image": "",
-            "publish_on": "2017-12-02T05:00:00Z",
-            "slug": "first-post",
-            "sticky": true,
-            "summary": "",
-            "title": "First Post",
-            "visible": true
-        },
-        "model": "judge.blogpost",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "author": 1,
-            "body": "This is your first comment!",
-            "hidden": false,
-            "level": 0,
-            "lft": 1,
-            "page": "b:1",
-            "parent": null,
-            "rght": 2,
-            "score": 0,
-            "time": "2017-12-02T08:46:54.007Z",
-            "tree_id": 1
-        },
-        "model": "judge.comment",
-        "pk": 1
-    },
-    {
-        "fields": {
-            "domain": "localhost:8081",
-            "name": "DMOJ: Modern Online Judge"
-        },
-        "model": "sites.site",
-        "pk": 1
-    }
 ]
diff --git a/judge/fixtures/navbar.json b/judge/fixtures/navbar.json
index d43868df..6253b19b 100644
--- a/judge/fixtures/navbar.json
+++ b/judge/fixtures/navbar.json
@@ -46,53 +46,5 @@
         },
         "model": "judge.navigationbar",
         "pk": 3
-    },
-    {
-        "fields": {
-            "key": "contest",
-            "label": "Contests",
-            "level": 0,
-            "lft": 1,
-            "order": 5,
-            "parent": null,
-            "path": "/contests/",
-            "regex": "^/contest",
-            "rght": 2,
-            "tree_id": 4
-        },
-        "model": "judge.navigationbar",
-        "pk": 5
-    },
-    {
-        "fields": {
-            "key": "about",
-            "label": "About",
-            "level": 0,
-            "lft": 1,
-            "order": 6,
-            "parent": null,
-            "path": "/about/",
-            "regex": "^/about/$",
-            "rght": 4,
-            "tree_id": 5
-        },
-        "model": "judge.navigationbar",
-        "pk": 6
-    },
-    {
-        "fields": {
-            "key": "status",
-            "label": "Status",
-            "level": 1,
-            "lft": 2,
-            "order": 7,
-            "parent": 6,
-            "path": "/status/",
-            "regex": "^/status/$|^/judge/",
-            "rght": 3,
-            "tree_id": 5
-        },
-        "model": "judge.navigationbar",
-        "pk": 7
     }
 ]
diff --git a/judge/forms.py b/judge/forms.py
index 87003e56..486031e9 100644
--- a/judge/forms.py
+++ b/judge/forms.py
@@ -148,7 +148,7 @@ class DownloadDataForm(Form):
 
 
 class ProblemSubmitForm(ModelForm):
-    source = CharField(max_length=65536, widget=AceWidget(theme='twilight', no_ace_media=True))
+    source = CharField(max_length=131072, widget=AceWidget(theme='twilight', no_ace_media=True))
     judge = ChoiceField(choices=(), widget=forms.HiddenInput(), required=False)
 
     def __init__(self, *args, judge_choices=(), **kwargs):
@@ -243,7 +243,7 @@ class TwoFactorLoginForm(TOTPForm):
     def clean(self):
         totp_or_scratch_code = self.cleaned_data.get('totp_or_scratch_code')
         if self.profile.is_webauthn_enabled and self.cleaned_data.get('webauthn_response'):
-            if len(self.cleaned_data['webauthn_response']) > 65536:
+            if len(self.cleaned_data['webauthn_response']) > 131072:
                 raise ValidationError(_('Invalid WebAuthn response.'))
 
             if not self.webauthn_challenge:
diff --git a/judge/migrations/0001_squashed_0084_contest_formats.py b/judge/migrations/0001_squashed_0084_contest_formats.py
index 22aa6597..3e9c6f98 100644
--- a/judge/migrations/0001_squashed_0084_contest_formats.py
+++ b/judge/migrations/0001_squashed_0084_contest_formats.py
@@ -523,7 +523,7 @@ class Migration(migrations.Migration):
                 ('time', models.FloatField(db_index=True, null=True, verbose_name='execution time')),
                 ('memory', models.FloatField(null=True, verbose_name='memory usage')),
                 ('points', models.FloatField(db_index=True, null=True, verbose_name='points granted')),
-                ('source', models.TextField(max_length=65536, verbose_name='source code')),
+                ('source', models.TextField(max_length=131072, verbose_name='source code')),
                 ('status', models.CharField(choices=[('QU', 'Queued'), ('P', 'Processing'), ('G', 'Grading'), ('D', 'Completed'), ('IE', 'Internal Error'), ('CE', 'Compile Error'), ('AB', 'Aborted')], db_index=True, default='QU', max_length=2, verbose_name='status')),
                 ('result', models.CharField(blank=True, choices=[('AC', 'Accepted'), ('WA', 'Wrong Answer'), ('TLE', 'Time Limit Exceeded'), ('MLE', 'Memory Limit Exceeded'), ('OLE', 'Output Limit Exceeded'), ('IR', 'Invalid Return'), ('RTE', 'Runtime Error'), ('CE', 'Compile Error'), ('IE', 'Internal Error'), ('SC', 'Short circuit'), ('AB', 'Aborted')], db_index=True, default=None, max_length=3, null=True, verbose_name='result')),
                 ('error', models.TextField(blank=True, null=True, verbose_name='compile errors')),
diff --git a/judge/migrations/0085_submission_source.py b/judge/migrations/0085_submission_source.py
index 5bfa72ac..24df3b06 100644
--- a/judge/migrations/0085_submission_source.py
+++ b/judge/migrations/0085_submission_source.py
@@ -15,7 +15,7 @@ class Migration(migrations.Migration):
             name='SubmissionSource',
             fields=[
                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('source', models.TextField(max_length=65536, verbose_name='source code')),
+                ('source', models.TextField(max_length=131072, verbose_name='source code')),
                 ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='link', to='judge.Submission', verbose_name='associated submission')),
             ],
         ),
diff --git a/judge/models/submission.py b/judge/models/submission.py
index 5aa6c676..70f1793b 100644
--- a/judge/models/submission.py
+++ b/judge/models/submission.py
@@ -261,7 +261,7 @@ class Submission(models.Model):
 class SubmissionSource(models.Model):
     submission = models.OneToOneField(Submission, on_delete=models.CASCADE, verbose_name=_('associated submission'),
                                       related_name='source')
-    source = models.TextField(verbose_name=_('source code'), max_length=65536)
+    source = models.TextField(verbose_name=_('source code'), max_length=131072)
 
     def __str__(self):
         return _('Source of %(submission)s') % {'submission': self.submission}
diff --git a/judge/views/comment.py b/judge/views/comment.py
index 7b2e086a..c95014ef 100644
--- a/judge/views/comment.py
+++ b/judge/views/comment.py
@@ -33,9 +33,8 @@ def vote_comment(request, delta):
     if 'id' not in request.POST or len(request.POST['id']) > 10:
         return HttpResponseBadRequest()
 
-    if not request.user.is_staff and not request.profile.has_any_solves:
-        return HttpResponseBadRequest(_('You must solve at least one problem before you can vote.'),
-                                      content_type='text/plain')
+    return HttpResponseBadRequest(_('Vote is disabled.'),
+                                  content_type='text/plain')
 
     if request.profile.mute:
         return HttpResponseBadRequest(_('Your part is silent, little toad.'), content_type='text/plain')
diff --git a/judge/views/register.py b/judge/views/register.py
index f5cdd640..a944275f 100644
--- a/judge/views/register.py
+++ b/judge/views/register.py
@@ -1,4 +1,7 @@
 # coding=utf-8
+
+import os
+
 from django import forms
 from django.conf import settings
 from django.contrib.auth.models import User
@@ -6,8 +9,15 @@ from django.contrib.auth.password_validation import get_default_password_validat
 from django.forms import ChoiceField, ModelChoiceField
 from django.shortcuts import render
 from django.utils.translation import gettext, gettext_lazy as _, ngettext
-from registration.backends.default.views import (ActivationView as OldActivationView,
-                                                 RegistrationView as OldRegistrationView)
+
+# from registration.backends.default.views import (ActivationView as OldActivationView,
+#                                                  RegistrationView as OldRegistrationView)
+from registration.backends.default.views import ActivationView as OldActivationView
+if os.getenv("TWO_STEP_REGISTRATION") == "true":
+    from registration.backends.default.views import RegistrationView as OldRegistrationView
+else:
+    from registration.backends.simple.views import RegistrationView as OldRegistrationView
+
 from registration.forms import RegistrationForm
 from sortedm2m.forms import SortedMultipleChoiceField
 
@@ -37,10 +47,11 @@ class CustomRegistrationForm(RegistrationForm):
         captcha = ReCaptchaField(widget=ReCaptchaWidget())
 
     def clean_email(self):
-        if User.objects.filter(email=self.cleaned_data['email']).exists():
-            raise forms.ValidationError(gettext('The email address "%s" is already taken. Only one registration '
-                                                'is allowed per address.') % self.cleaned_data['email'])
-        validate_email_domain(self.cleaned_data['email'])
+        # if User.objects.filter(email=self.cleaned_data['email']).exists():
+        #     raise forms.ValidationError(gettext('The email address "%s" is already taken. Only one registration '
+        #                                         'is allowed per address.') % self.cleaned_data['email'])
+        # validate_email_domain(self.cleaned_data['email'])
+        # print("cleaning_email",self.cleaned_data['email'])
         return self.cleaned_data['email']
 
     def clean_organizations(self):
@@ -86,9 +97,9 @@ class RegistrationView(OldRegistrationView):
         initial = super(RegistrationView, self).get_initial(*args, **kwargs)
         initial['timezone'] = settings.DEFAULT_USER_TIME_ZONE
         initial['language'] = Language.objects.get(key=settings.DEFAULT_USER_LANGUAGE)
+        initial['email'] = "atgt@example.com"
         return initial
 
-
 class ActivationView(OldActivationView):
     title = _('Activation Key Invalid')
     template_name = 'registration/activate.html'
diff --git a/judge/views/ticket.py b/judge/views/ticket.py
index eec3d45b..f551e70f 100644
--- a/judge/views/ticket.py
+++ b/judge/views/ticket.py
@@ -41,11 +41,7 @@ class TicketForm(forms.Form):
 
     def clean(self):
         if self.request is not None and self.request.user.is_authenticated:
-            profile = self.request.profile
-            if profile.mute:
-                raise ValidationError(_('Your part is silent, little toad.'))
-            if not self.request.in_contest and not profile.has_any_solves:
-                raise ValidationError(_('You must solve at least one problem before you can create a ticket.'))
+            raise ValidationError(_('Ticket is disabled.'))
         return super(TicketForm, self).clean()
 
 
@@ -96,8 +92,7 @@ class NewProblemTicketView(ProblemMixin, TitleMixin, NewTicketView):
                                      self.object.translated_name(self.request.LANGUAGE_CODE)))
 
     def form_valid(self, form):
-        if not self.object.is_accessible_by(self.request.user):
-            raise Http404()
+        raise Http404()
         return super().form_valid(form)
 
 
diff --git a/judge/views/user.py b/judge/views/user.py
index 19baad6d..66e97009 100644
--- a/judge/views/user.py
+++ b/judge/views/user.py
@@ -137,14 +137,15 @@ class CustomLoginView(LoginView):
     redirect_authenticated_user = True
 
     def form_valid(self, form):
-        password = form.cleaned_data['password']
-        validator = PwnedPasswordsValidator()
-        try:
-            validator.validate(password)
-        except ValidationError:
-            self.request.session['password_pwned'] = True
-        else:
-            self.request.session['password_pwned'] = False
+        # password = form.cleaned_data['password']
+        # validator = PwnedPasswordsValidator()
+        # try:
+        #     validator.validate(password)
+        # except ValidationError:
+        #     self.request.session['password_pwned'] = True
+        # else:
+        #     self.request.session['password_pwned'] = False
+        self.request.session['password_pwned'] = False
         return super().form_valid(form)
 
 
@@ -352,6 +353,8 @@ def edit_profile(request):
     if request.profile.mute:
         return generic_message(request, _("Can't edit profile"), _('Your part is silent, little toad.'), status=403)
     if request.method == 'POST':
+        if f"{ request.user }" == "IKnowGenchi":
+            return generic_message(request, _("Can't edit profile"), _(f"{ request.user }のプロフィールは編集できないようにしています。"), status=403)
         form = ProfileForm(request.POST, instance=request.profile, user=request.user)
         if form.is_valid():
             with revisions.create_revision(atomic=True):
diff --git a/requirements.txt b/requirements.txt
index db098fab..088a38b4 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,4 +1,5 @@
-Django>=3.2,<4
+# Django>=3.2,<4
+# Django @ git+https://github.com/satos---jp/django-private.git
 django_compressor>=3
 django-mptt>=0.13
 django-pagedown<2
diff --git a/templates/base.html b/templates/base.html
index c866ab35..b8d923af 100644
--- a/templates/base.html
+++ b/templates/base.html
@@ -290,21 +290,7 @@
     <footer>
         <span id="footer-content">
             <br>
-            <a style="color: #808080" href="https://dmoj.ca">{{ _('proudly powered by **DMOJ**')|markdown('default', strip_paragraphs=True) }}</a> |
-            {% if misc_config.footer %}
-                {{ misc_config.footer|safe }} |
-            {% endif %}
-            <form action="{{ url('set_language') }}" method="post" style="display: inline">
-                {% csrf_token %}
-            <input name="next" type="hidden" value="{{ request.get_full_path() }}">
-            <select name="language" onchange="form.submit()" style="height: 1.5em">
-                {% for language in language_info_list(LANGUAGES) %}
-                    <option value="{{ language.code }}" {% if language.code == LANGUAGE_CODE %}selected{% endif %}>
-                        {{ language.name_local }} ({{ language.code }})
-                    </option>
-                {% endfor %}
-            </select>
-          </form>
+            <div style="color: #808080">{{ _('proudly powered by **DMOJ**')|markdown('default', strip_paragraphs=True) }}</div>
         </span>
     </footer>
 </div>
diff --git a/templates/blog/content.html b/templates/blog/content.html
index 062e19e7..5afcae63 100644
--- a/templates/blog/content.html
+++ b/templates/blog/content.html
@@ -35,12 +35,6 @@
             {% endcache %}
         </div>
     </div>
-    <hr>
-    <span class="social">
-        {{ post_to_facebook(request, post, '<i class="fa fa-facebook-official"></i>') }}
-        {{ post_to_twitter(request, SITE_NAME + ':', post, '<i class="fa fa-twitter"></i>') }}
-    </span>
-    {% include "comments/list.html" %}
 {% endblock %}
 
 {% block bodyend %}
diff --git a/templates/blog/list.html b/templates/blog/list.html
index 75e12b37..841f0014 100644
--- a/templates/blog/list.html
+++ b/templates/blog/list.html
@@ -66,12 +66,6 @@
                             {% with abs=_('posted on {time}'), rel=_('posted {time}') %}
                                 {{ relative_time(post.publish_on, abs=abs, rel=rel) }}
                             {% endwith %}
-                        </span><span class="comment-data">
-                            <a href="{{ url('blog_post', post.id, post.slug) }}#comments" class="comment-count-link">
-                                <i class="fa fa-comments comment-icon"></i><span class="comment-count">
-                                    {{- post_comment_counts[post.id] or 0 -}}
-                                </span>
-                            </a>
                         </span>
                         <div class="summary content-description">
                             {% cache 86400 'post_summary' post.id %}
@@ -150,26 +144,6 @@
                 </div>
             {% endif %}
 
-            <div class="blog-sidebox sidebox">
-                <h3>{{ _('Comment stream') }} <i class="fa fa-comments"></i></h3>
-                <div class="sidebox-content">
-                    <ul>
-                        {% for comment in comments %}
-                            <li>
-                                <span style="padding-left:0.25em" class="poster">
-                                    {{ link_user(comment.author) }}
-                                </span> &rarr;
-                                <a href="{{ comment.link }}#comment-{{ comment.id }}">{{ comment.page_title }}</a>
-                            </li>
-                        {% endfor %}
-                    </ul>
-                    <span class="rssatom">
-                        <a href="{{ url('comment_rss') }}"><span><i class="fa fa-rss"></i></span> RSS</a>
-                        /
-                        <a href="{{ url('comment_atom') }}">Atom</a>
-                    </span>
-                </div>
-            </div>
             <div class="blog-sidebox sidebox">
                 <h3>{{ _('New problems') }} <i class="fa fa-puzzle-piece"></i>
                 </h3>
@@ -179,11 +153,6 @@
                             <li><a href="{{ url('problem_detail', problem.code) }}">{{ problem.name }}</a></li>
                         {% endfor %}
                     </ul>
-                    <span class="rssatom">
-                        <a href="{{ url('problem_rss') }}"><span><i class="fa fa-rss"></i></span> RSS</a>
-                        /
-                        <a href="{{ url('problem_atom') }}">Atom</a>
-                    </span>
                 </div>
             </div>
             {% if perms.judge.test_site and own_open_tickets %}
diff --git a/templates/problem/list.html b/templates/problem/list.html
index e9107b35..e4a52618 100644
--- a/templates/problem/list.html
+++ b/templates/problem/list.html
@@ -217,11 +217,6 @@
                         <th class="ac-rate">
                             <a href="{{ sort_links.ac_rate }}">{{ _('AC %%') }}{{ sort_order.ac_rate }}</a>
                         </th>
-                        <th class="editorial" title="{{ _('Editorial') }}">
-                            <a href="{{ sort_links.editorial }}">
-                                <i class="fa fa-book"></i>{{ sort_order.editorial }}
-                            </a>
-                        </th>
                         <th class="users">
                             <a href="{{ sort_links.user_count }}">{{ _('Users') }}{{ sort_order.user_count }}</a>
                         </th>
@@ -276,15 +271,6 @@
                         <td class="p">{{ problem.points|floatformat }}{% if problem.partial %}p{% endif %}</td>
                         {% if not request.in_contest %}
                             <td class="ac-rate">{{ problem.ac_rate|floatformat(1) }}%</td>
-                            <td>
-                                {% if problem.has_public_editorial %}
-                                    <a href="{{ url('problem_editorial', problem.code) }}">
-                                        <i class="has-editorial-color fa fa-check-circle"></i>
-                                    </a>
-                                {% else %}
-                                    <i class="no-editorial-color fa fa-minus-circle"></i>
-                                {% endif %}
-                            </td>
                         {% endif %}
                         <td class="users">
                             <a href="{{ url('ranked_submissions', problem.code) }}">
diff --git a/templates/problem/problem.html b/templates/problem/problem.html
index d9909d98..3dec2a58 100644
--- a/templates/problem/problem.html
+++ b/templates/problem/problem.html
@@ -47,10 +47,6 @@
 {% block content_js_media %}
     {% include "comments/media-js.html" %}
 
-    {% if vote_perm.can_view() %}
-        <script src="{{ static('libs/chart.js/Chart.js') }}" type="text/javascript"></script>
-        <script src="{{ static('problem-vote.js') }}" type="text/javascript"></script>
-    {% endif %}
 {% endblock %}
 
 {% block title_row %}
@@ -132,44 +128,6 @@
     <div><a href="{{ url('chronological_submissions', problem.code) }}">{{ _('All submissions') }}</a></div>
     <div><a href="{{ url('ranked_submissions', problem.code) }}">{{ _('Best submissions') }}</a></div>
 
-    {% if vote_perm.can_view() %}
-        <hr style="padding-top: 0.1em">
-        {% if vote_perm.can_vote() %}
-            <div><a href="#" data-featherlight="{{ url('problem_vote', problem.code) }}" id="problem-vote-button">
-                {%- if vote is none -%}
-                    {{ _('Vote on problem points') }}
-                {%- else -%}
-                    {{ _('Edit points vote (%(points)d)', points=vote.points) }}
-                {%- endif -%}
-            </a></div>
-        {% endif %}
-        <div><a href="#" data-featherlight="{{ url('problem_vote_stats', problem.code) }}">{{ _('Voting statistics') }}</a></div>
-    {% endif %}
-
-    {% if (editorial and editorial.is_accessible_by(request.user)) and not request.in_contest %}
-        <hr>
-        <div><a href="{{ url('problem_editorial', problem.code) }}">{{ _('Read editorial') }}</a></div>
-    {% endif %}
-    {% if can_edit_problem %}
-        <hr>
-        <div>
-            <a href="{{ url('problem_ticket_list', problem.code) }}">{{ _('Manage tickets') }}
-                {% if num_open_tickets %}<span class="badge">{{ num_open_tickets }}</span>{% endif %}
-            </a>
-        </div>
-        <div><a href="{{ url('admin:judge_problem_change', problem.id) }}">{{ _('Edit problem') }}</a></div>
-        {% if not problem.is_manually_managed %}
-            <div><a href="{{ url('problem_data', problem.code) }}">{{ _('Edit test data') }}</a></div>
-        {% endif %}
-    {% elif request.user.is_authenticated and has_tickets %}
-        <hr>
-        <div>
-            <a href="{{ url('problem_ticket_list', problem.code) }}">{{ _('My tickets') }}
-                {% if num_open_tickets %}<span class="badge">{{ num_open_tickets }}</span>{% endif %}
-            </a>
-        </div>
-    {% endif %}
-
     {% if problem.is_subs_manageable_by(request.user) %}
         <div>
             <a href="{{ url('problem_manage_submissions', problem.code) }}">{{ _('Manage submissions') }}</a>
@@ -313,40 +271,6 @@
     {% endwith %}
 {% endblock %}
 
-{% block post_description_end %}
-    {% if request.user.is_authenticated and not request.profile.mute %}
-        <a href="{{ url('new_problem_ticket', problem.code) }}" class="button clarify">
-            {%- if contest_problem and contest_problem.contest.use_clarifications and request.profile.current_contest.live -%}
-                {{ _('Request clarification') }}
-            {%- else -%}
-                {{ _('Report an issue') }}
-            {%- endif -%}
-        </a>
-    {% endif %}
-{% endblock %}
-
-{% block comments %}
-    {% if contest_problem and contest_problem.contest.use_clarifications %}
-        <div class="clarifications-area">
-            <h2><i class="fa fa-question-circle"></i> {{ _('Clarifications') }}</h2>
-            {% if has_clarifications %}
-                {% for clarification in clarifications %}
-                    <div class="problem-clarification">
-                        <div class="time">{{ relative_time(clarification.date) }}</div>
-                        <span class="body">
-                            {{ clarification.description|markdown('problem', MATH_ENGINE)|reference }}
-                        </span>
-                    </div>
-                {% endfor %}
-            {% else %}
-                <p class="no-comments-message">{{ _('No clarifications have been made at this time.') }}</p>
-            {% endif %}
-        </div>
-    {% else %}
-        {% include "comments/list.html" %}
-    {% endif %}
-{% endblock %}
-
 {% block bodyend %}
     {{ super() }}
     {% include "comments/math.html" %}
diff --git a/templates/problem/submit.html b/templates/problem/submit.html
index 892a9183..1356bf78 100644
--- a/templates/problem/submit.html
+++ b/templates/problem/submit.html
@@ -114,8 +114,8 @@
                 }).resize();
 
                 $('#problem_submit').submit(function (event) {
-                    if ($('#id_source').val().length > 65536) {
-                        alert("{{ _('Your source code must contain at most 65536 characters.') }}");
+                    if ($('#id_source').val().length > 131072) {
+                        alert("{{ _('Your source code must contain at most 131072 characters.') }}");
                         event.preventDefault();
                         $('#problem_submit').find(':submit').attr('disabled', false);
                     }
@@ -132,14 +132,6 @@
 {% block body %}
     <br>
     {% if not no_judges %}
-        {% if default_lang not in form.fields.language.queryset %}
-            <div class="alert alert-warning alert-dismissable">
-                <a class="close">x</a>
-                <b>{{ _('Warning!') }}</b>
-                {{ _('Your default language, %(language)s, is unavailable for this problem and has been deselected.', language=bold(default_lang.name)) }}
-            </div>
-        {% endif %}
-
         {% if request.in_contest and submission_limit %}
             {% if submissions_left > 0 %}
                 <div class="alert alert-warning alert-dismissable">
diff --git a/templates/registration/login.html b/templates/registration/login.html
index 52e1c8d4..51b12b77 100644
--- a/templates/registration/login.html
+++ b/templates/registration/login.html
@@ -53,7 +53,6 @@
             <button style="float:right;" type="submit">{{ _('Login!') }}</button>
             <input type="hidden" name="next" value="{{ next }}">
         </form>
-        <a href="{{ url('password_reset') }}">{{ _('Forgot your password?') }}</a>
 
         {% if form.has_google_auth or form.has_facebook_auth or form.has_github_auth %}
             <h4>{{ _('Or log in with...') }}</h4>
diff --git a/templates/registration/registration_complete.html b/templates/registration/registration_complete.html
index 25903d7d..6f5edce0 100644
--- a/templates/registration/registration_complete.html
+++ b/templates/registration/registration_complete.html
@@ -1,4 +1,4 @@
 {% extends "base.html" %}
 {% block body %}
-    <p>{{ _('You have successfully been registered. An email has been sent to the email address you provided to confirm your registration.') }}</p>
+    <p>{{ _('You have successfully been registered.') }}</p>
 {% endblock %}
\ No newline at end of file
diff --git a/templates/registration/registration_form.html b/templates/registration/registration_form.html
index 494d8def..4a70e036 100644
--- a/templates/registration/registration_form.html
+++ b/templates/registration/registration_form.html
@@ -142,14 +142,7 @@
                 <div class="form-field-error">{{ form.username.errors }}</div>
             {% endif %}
 
-            <div class="block-header">{{ _('Email') }}</div>
-            <span class="fullwidth{% if form.email.errors %}-error{% endif %}">{{ form.email }}</span>
-            {% if form.email.errors %}
-                <div class="form-field-error">{{ form.email.errors }}</div>
-            {% endif %}
-
             <div class="block-header">{{ _('Password') -}}
-                <small>(<a href="#" class="pass-req-link">?</a>)</small>
             </div>
             <div style="display: none" class="pass-req alert alert-info">
                 <ul>
@@ -170,6 +163,14 @@
                 <div class="form-field-error">{{ form.password2.errors }}</div>
             {% endif %}
 
+            <div hidden>
+            <div> {{ _('これらがhiddenなのは謎には関係ないです。') }} </div>
+            <div class="block-header">{{ _('Email') }}</div>
+            <span class="fullwidth{% if form.email.errors %}-error{% endif %}">{{ form.email }}</span>
+            {% if form.email.errors %}
+                <div class="form-field-error">{{ form.email.errors }}</div>
+            {% endif %}
+
             <div class="block-header">{{ _('Timezone') }}<small>{{ _('(select your closest major city)') }}</small></div>
             <div class="fullwidth">
                 <div>{{ form.timezone }}
@@ -188,6 +189,7 @@
             {% if form.organizations.errors %}
                 <div class="form-field-error">{{ form.organizations.errors }}</div>
             {% endif %}
+            </div>
 
             {% if form.newsletter %}
                 <div style="padding-top: 0.5em;">{{ form.newsletter }}
diff --git a/templates/submission/list.html b/templates/submission/list.html
index aeba287b..7a958eae 100644
--- a/templates/submission/list.html
+++ b/templates/submission/list.html
@@ -348,10 +348,6 @@
         </div>
 
         <div id="content-left" class="submission">
-            <div class="ws-closed">
-                <a href="javascript:void(0)">{{ _('You were disconnected. Refresh to show latest updates.') }}</a>
-            </div>
-
             <div id="submissions-table">
                 {% set profile_id = request.profile.id if request.user.is_authenticated else 0 %}
                 {% for submission in submissions %}
diff --git a/templates/user/edit-profile.html b/templates/user/edit-profile.html
index 845d3bf9..b2a6c3cf 100644
--- a/templates/user/edit-profile.html
+++ b/templates/user/edit-profile.html
@@ -270,6 +270,8 @@
 
             {% csrf_token %}
 
+            <div hidden>
+            <div> {{ _('これらがhiddenなのは謎には関係ないです。') }} </div>
             <div style="padding-top:0.5em" class="block-header grayed">{{ _('Self-description:') }}</div>
             {{ form.about }}
             <hr>
@@ -310,136 +312,12 @@
                     </div>
                 {% endif %}
             </div>
-            <hr>
-            <div class="settings" style="padding-top:0.7em">
-                <div class="pane">
-                    <table border="0">
-                        {% if form.newsletter %}
-                            <tr><td>
-                                {{ form.newsletter }}
-                                <label for="id_newsletter" style="float: unset" class="inline-header grayed">
-                                        {{- _('Notify me about upcoming contests') -}}
-                                </label>
-                            </td></tr>
-                        {% endif %}
-                        <tr><td>
-                            {{ form.test_site }}
-                            <label for="id_test_site" style="float: unset" class="inline-header grayed">
-                                {{- form.test_site.label -}}
-                            </label>
-                        </td></tr>
-                        <tr><td>
-                            <a href="https://www.gravatar.com/" target="_blank" class="inline-header" rel="noopener">
-                                {{ _('Change your avatar') }}
-                            </a>
-                        </td></tr>
-                        <tr><td>
-                            <a href="{{ url('password_change') }}" class="inline-header">
-                                {{ _('Change your password') }}
-                            </a>
-                        </td></tr>
-                        <tr><td>
-                            <a href="{{ url('email_change') }}" class="inline-header">
-                                {{ _('Change your email') }}
-                            </a>
-                        </td></tr>
-                        {% if can_download_data %}
-                            <tr><td>
-                                <a href="{{ url('user_prepare_data') }}" class="inline-header">
-                                    {{ _('Download your data') }}
-                                </a>
-                            </td></tr>
-                        {% endif %}
-                        <tr><td>
-                            <span id="api-token-td" class="inline-header grayed">
-                                {{ _('API token:') }}
-                                {% if profile.api_token %}
-                                    <a id="generate-api-token-button" href="{{ url('generate_api_token') }}"
-                                        class="button inline-button">{{ _('Regenerate') }}</a>
-                                    <a id="remove-api-token-button" href="{{ url('remove_api_token') }}"
-                                        class="button inline-button ml-5">{{ _('Remove') }}</a>
-                                    <div class="api-token" id="api-token">{{ _('Hidden') }}</div>
-                                {% else %}
-                                    <a id="generate-api-token-button" href="{{ url('generate_api_token') }}"
-                                        class="button inline-button">{{ _('Generate') }}</a>
-                                    <div class="api-token" id="api-token"></div>
-                                {% endif %}
-                            </span>
-                        </td></tr>
-                    </table>
-                </div>
-                <div class="pane">
-                    <div>
-                        {% if profile.is_totp_enabled %}
-                            <div class="block-header grayed">{{ _('Two-factor authentication is enabled:') }}</div>
-                            <div class="block-buttons">
-                                {% if require_staff_2fa and request.user.is_staff and not profile.is_webauthn_enabled %}
-                                    <a id="disable-2fa-button" class="button inline-button">{{ _('Disable') }}</a>
-                                {% else %}
-                                    <a href="{{ url('disable_2fa') }}"
-                                       class="button inline-button">{{ _('Disable') }}</a>
-                                {% endif %}
-                                <a href="{{ url('refresh_2fa') }}" class="button inline-button">{{ _('Refresh') }}</a>
-                            </div>
-                            <div class="block-header grayed">
-                                {{ _('Scratch codes:') }}
-                                {% if profile.scratch_codes %}
-                                    <a id="generate-scratch-codes-button" href="{{ url('generate_scratch_codes') }}"
-                                       class="button inline-button">{{ _('Regenerate') }}</a>
-                                    <div id="hidden-word">{{ _('Hidden') }}</div>
-                                {% else %}
-                                    <a id="generate-scratch-codes-button" href="{{ url('generate_scratch_codes') }}"
-                                       class="button inline-button">{{ _('Generate') }}</a>
-                                {% endif %}
-                                <div style="display: none" id="scratch-codes-regen">
-                                    <div id="scratch-codes-text">
-                                        {{ _('Below is a list of one-time use scratch codes.') }}
-                                        {{ _('These codes can only be used once and are for emergency use.') }}
-                                        {{ _('You can use these codes to login to your account or disable two-factor authentication.') }}
-                                        {{ _('If you ever need more scratch codes, you can regenerate them here.') }}
-                                        {{ _('Please write these down and keep them in a secure location.') }}<br><br>
-                                        {{ _('You will not be able to view your scratch codes after you leave this page!') }}</div>
-                                    <pre><code id="scratch-codes"></code></pre>
-                                </div>
-                            </div>
-                        {% else %}
-                            <span class="inline-header grayed">
-                                {{ _('Two-factor Authentication is disabled:') }}
-                                <a href="{{ url('enable_2fa') }}" class="button inline-button">{{ _('Enable') }}</a>
-                            </span>
-                        {% endif %}
-                    </div>
-                    <span class="grayed">
-                    {% if HAS_WEBAUTHN %}
-                        <div style="padding-bottom:0.4em" class="block-header grayed">
-                            {{- _('Security keys:') -}}
-                        </div>
-                        <table class="table">
-                            {% if profile.is_webauthn_enabled %}
-                                {% for credential in profile.webauthn_credentials.all() %}
-                                    <tr>
-                                        <td>{{ credential.name }}</td>
-                                        <td>
-                                            <button class="webauthn-delete inline-button"
-                                                    data-delete-url="{{ url('webauthn_delete', credential.id) }}">
-                                                {{ _('Delete') }}
-                                            </button>
-                                        </td>
-                                    </tr>
-                                {% endfor %}
-                            {% endif %}
-                            <tr>
-                                <td><input id="new-webauthn-name" type="text" placeholder="{{ _('Enter a name for this key') }}"></td>
-                                <td><button id="new-webauthn" class="inline-button">{{ _('Add') }}</button></td>
-                            </tr>
-                        </table>
-                    {% endif %}
-                    </span>
-                </div>
             </div>
             <hr>
-            <div class="block-header grayed">{{ _('User-script:') }}</div>
-            {{ form.user_script }}
+            <div class="pane">
+                <div class="block-header grayed">{{ _('User-script:') }}</div>
+                {{ form.user_script }}
+            </div>
             <hr>
 
             <input type="submit" class="submit-bar" value="{{ _('Update profile') }}">
diff --git a/templates/user/user-list-tabs.html b/templates/user/user-list-tabs.html
index e6112c60..4bdc8d3e 100644
--- a/templates/user/user-list-tabs.html
+++ b/templates/user/user-list-tabs.html
@@ -2,5 +2,4 @@
 
 {% block tabs %}
     {{ make_tab('list', 'fa-users', url('user_list'), _('Leaderboard')) }}
-    {{ make_tab('organizations', 'fa-university', url('organization_list'), _('Organizations')) }}
 {% endblock %}
